def extract_meta(url: str):
    try:
        r = S.get(url, timeout=25)
        r.raise_for_status()
    except Exception:
        return None

    t = r.text

    def pick(prop: str) -> str:
        m = re.search(rf'<meta[^>]+property=["\']{prop}["\'][^>]+content=["\']([^"\']+)["\']', t, re.I)
        if not m:
            m = re.search(rf'<meta[^>]+name=["\']{prop}["\'][^>]+content=["\']([^"\']+)["\']', t, re.I)
        return html.unescape(m.group(1).strip()) if m else ""

    title = pick("og:title") or pick("twitter:title")
    if not title:
        m = re.search(r"<title[^>]*>(.*?)</title>", t, re.I | re.S)
        title = html.unescape(m.group(1).strip()) if m else ""

    img = pick("og:image") or pick("twitter:image")
    if img:
        img = img.split("?")[0].strip()

    price = ""
    mprice = re.search(r'content=["\']R?\$?\s?(\d{1,3}(?:[\.\s]\d{3})*(?:,\d{2})?)["\'][^>]+property=["\']product:price:amount["\']', t, re.I)
    if not mprice:
        mprice = re.search(r'R\$\s?(\d{1,3}(?:[\.\s]\d{3})*(?:,\d{2})?)', t)
    if mprice:
        price = mprice.group(1).replace(".", "").replace(" ", "").replace(",", ".")

    if not title:
        return None
    return {"title": title[:180], "image": img, "price": price}
